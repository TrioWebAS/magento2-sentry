<?php
// phpcs:disable Magento2.Templates.ThisInTemplate.FoundThis

/** @var \JustBetter\Sentry\Block\SentryScript $block */
/** @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer */

if (!$block->canUseScriptTag($block->getNameInLayout())) {
    return;
}

$bundleFile = 'bundle';

if ($block->isTracingEnabled()) {
    $bundleFile .= '.tracing';
}

if ($block->useSessionReplay()) {
    $bundleFile .= '.replay';
}

$bundleFile .= '.min.js';

$remoteFile = sprintf(
    'https://browser.sentry-cdn.com/%s/%s',
    $block->escapeHtmlAttr($block->getJsSdkVersion()),
    $bundleFile
);
?>

<script src="<?= /** @noEscape */$remoteFile ?>" crossorigin="anonymous"></script>
<?php
// The following script can be omitted in which case the
// `Chessio_Matomo/js/tracker' component will inject the tracker script instead.
// However that might cause the tracker script to miss the `DOMContentLoaded'
// event which breaks the link tracking feature.
$scriptString = <<<script
if (typeof Sentry !== 'undefined') {
    Sentry.init({
        dsn: '{$block->escapeUrl(trim($block->getDSN()))}',
        release: '{$block->escapeHtml(trim($block->getVersion()))}',
        environment: '{$block->escapeHtml(trim($block->getEnvironment()))}',
        integrations: [
script;
if ($block->isTracingEnabled()) {
    $scriptString .= "Sentry.browserTracingIntegration({
                enableInp: true,
            }),";
}
if ($block->useSessionReplay()) {
    $scriptString .= "Sentry.replayIntegration({
                blockAllMedia: {$block->escapeHtml($block->getReplayBlockMedia() ? 'true' : 'false')},
                maskAllText: {$block->escapeHtml($block->getReplayMaskText() ? 'true' : 'false')},
            }),";
}
$scriptString .= '],';
if ($block->isTracingEnabled()) {
    $scriptString .= "tracesSampleRate: {$block->escapeHtml($block->getTracingSampleRate())},";
}

if ($block->useSessionReplay()) {
    $scriptString .=
        "replaysSessionSampleRate: {$block->escapeHtml($block->getReplaySessionSampleRate())},
        replaysOnErrorSampleRate: {$block->escapeHtml($block->getReplayErrorSampleRate())},";
}

$scriptString .= "ignoreErrors: {$block->getIgnoreJsErrors()},";

if ($block->stripStaticContentVersion() || $block->stripStoreCode()) {
    $scriptString .= "beforeSend: function(event) {
            event.exception.values.map(function (value) {
                if (value.stacktrace === undefined || ! value.stacktrace) {
                    return value;
                }";
    if ($block->stripStaticContentVersion()) {
        $scriptString .= "value.stacktrace.frames.map(function (frame) {
            frame.filename = frame.filename.replace(/version[0-9]{10}\//, '');
            return frame;
        });";
    }
    if ($block->stripStoreCode()) {
        $scripetString .= "value.stacktrace.frames.map(function (frame) {
                    frame.filename = frame.filename.replace('/{$block->escapeHtml($block->getStoreCode())}/', '/');
                    return frame;
                });";
    }
    $scriptString .= "return value;
            });
            return event;
        }";
}

$scriptString .= "});
}";

echo $secureRenderer->renderTag('script', [], $scriptString, false);
?>
<?php if ($block->useLogRocket()): ?>
    <script src="https://cdn.lr-ingest.io/LogRocket.min.js" crossorigin="anonymous"></script>
<?php
$scriptString = <<<script
    window.LogRocket && window.LogRocket.init('{$block->getLogrocketKey()}');
    LogRocket.getSessionURL(sessionURL => {
        Sentry.configureScope(scope => {
            scope.setExtra("sessionURL", sessionURL);
        });
    });
script;

if ($block->useLogRocketIdentify()) {
    $scriptString = <<<script
        define('customerData',
            ['jquery', 'Magento_Customer/js/customer-data'],
            function ($, customerData) {
                'use strict';

                var getCustomerInfo = function () {
                    var customer = customerData.get('customer');

                    return customer();
                };

                var isLoggedIn = function (customerInfo) {
                    return customerInfo && customerInfo.firstname;
                };

                return function () {
                    var deferred = $.Deferred();
                    var customerInfo = getCustomerInfo();

                    if (customerInfo && customerInfo.data_id) {
                        deferred.resolve(isLoggedIn(customerInfo), customerInfo);
                    } else {
                        customerData.reload(['customer'], false)
                            .done(function () {
                                customerInfo = getCustomerInfo()
                                deferred.resolve(isLoggedIn(customerInfo), customerInfo);
                            })
                            .fail(function () {
                                deferred.reject();
                            });
                    }

                    return deferred;
                };

            }
        );

        require(["customerData"], function (customerData) {

            customerData().then(function (loggedIn, data) {
                if (!loggedIn) {
                    return;
                }

                LogRocket.identify(data.websiteId, {
                    name: data.fullname,
                    email: data.email
                });

            });
        });
script;
}
    echo $secureRenderer->renderTag('script', [], $scriptString, false);
endif;
